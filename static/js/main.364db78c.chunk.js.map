{"version":3,"sources":["react/components/base/Heading/Heading.tsx","react/components/base/Button/Button.tsx","react/components/presentational/Card/Card.tsx","react/components/app-specific/AddCard.tsx","react/components/presentational/Dash/Dash.tsx","react/helper/typeCheck.ts","react/components/presentational/ModalController/Modal/Modal.tsx","react/components/app-specific/AddModal/AddModal.tsx","react/components/base/Paragraph/Paragraph.tsx","react/components/app-specific/InfoModal/InfoModal.tsx","react/components/presentational/ModalController/ModalController.tsx","react/components/app-specific/Info.tsx","react/components/base/Image/Image.tsx","react/State.ts","react/components/app-specific/CatCard.tsx","react/components/presentational/List/ListItem/ListItem.tsx","react/components/presentational/List/List.tsx","react/components/stateful/Forms/Field/Field.tsx","react/helper/helperUtils.ts","react/components/stateful/Forms/Form.tsx","react/components/app-specific/Todo/TodoCard.tsx","react/components/app-specific/Todo/TodoEntry.tsx","react/components/app-specific/LoremCard.tsx","react/components/Placeholder.tsx","react/App.tsx","index.tsx"],"names":["Heading","props","children","type","headingLvl","Error","react_default","a","createElement","className","concat","Button","innerText","isHTMLInputSubmit","handleClickFn","target","value","onClick","data-target","Card","_Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","_this$props","id","header","content","media","action","Component","AddCard","handleAddFn","childrenObj","Heading_Heading_Heading","Button_Button_Button","Card_Card_Card","EmptyInd","Dash","_getPrototypeOf2","_this","_len","length","args","Array","_key","call","render","handleCardCloseFn","isAddCard","ele","obj","keyFromType","isTypedObj","name","Modal","headerText","contentModifier","handleCloseFn","console","warn","AddModal","handleCardFn","renderCards","Modal_Modal","basic1","basic2","cat","lorem","todo","Paragraph","InfoModal","Paragraph_Paragraph_Paragraph","href","initialState","toDisplay","ModalController","renderModal","InfoModal_InfoModal","AddModal_AddModal","_this$props2","toRender","Fragment","state","Info","handleDisplayFn","Image","src","alt","AppState","listEle","Headers","append","fetchInit","method","mode","objectSpread","catFact","catImg","externalCorsProxy","catEndpoint1","catEndpoint2","CatCard","getCatFactFetch","asyncToGenerator","regenerator_default","mark","_callee","responseStr","responseImg","wrap","_context","prev","next","fetch","then","blob","clone","json","val","text","catch","error","sent","setState","file","stop","_this$state","Image_Image_Image","ListItem","List","renderChildren","map","child","index","ListItem_ListItem","listType","Field","noLabel","handleChangeFn","required","inputName","labelName","labelText","string","regex","match","capitalizedLetter","toUpperCase","replace","capitalizeString","undefined","onChange","htmlFor","task","priority","Form","handleFormChangeDefault","event","_event$target","keys","includes","defineProperty","submitForm","preventDefault","handleSubmitFn","values","some","prevState","Field_Field","sayHi","TodoCard","isArray","Form_Form","List_List_List","TodoEntry","handleDeleteFn","priorityDiv","style","display","flexFlow","justifyContent","alignItems","marginLeft","width","deleteBtn","prgh","loremStr","loremEndpoint","LoremCard","getLoremFetch","BasicCard","BasicCard2","App","handleModalDisplay","HTMLElement","dataset","hideModal","targetModalClass","classList","contains","stopPropagation","handleSubmit","childState","push","handleEntryDelete","parseInt","splice","renderTemplate","TodoEntry_TodoEntry","toggleCardState","renderCardsState","childArr","CatCard_CatCard","LoremCard_LoremCard","TodoCard_TodoCard","childrenFromState","ModalController_ModalController","Dash_Dash_Dash","AddCard_AddCard","Info_Info","ReactDOM","react","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.364db78c.chunk.js","sourcesContent":["import React ,{ Component, ReactNode, ReactChild } from 'react';\r\n\r\nimport './Heading.css'\r\n\r\nexport const Heading = (props: Local.HeadingProps): JSX.Element => {\r\n  const { children, type, headingLvl } = props;\r\n  if (!children) throw new Error('Erorr expecting children elements');\r\n  switch(headingLvl) {\r\n    case 1:\r\n      return (\r\n        <h1\r\n          className={`heading ${type ? `heading--${type}` : ''}`}\r\n        >\r\n          {children}\r\n        </h1>\r\n      )\r\n    case 2:\r\n      return (\r\n        <h2\r\n          className={`heading ${type ? `heading--${type}` : ''}`}\r\n        >\r\n          {children}\r\n        </h2>\r\n      )\r\n    case 3:\r\n      return (\r\n        <h3\r\n          className={`heading ${type ? `heading--${type}` : ''}`}\r\n        >\r\n          {children}\r\n        </h3>\r\n      )\r\n    case 4:\r\n      return (\r\n        <h4\r\n        className={`heading ${type ? `heading--${type}` : ''}`}\r\n        >\r\n          {children}\r\n        </h4>\r\n      )\r\n    case 5:\r\n      return (\r\n        <h4\r\n        className={`heading ${type ? `heading--${type}` : ''}`}\r\n        >\r\n          {children}\r\n        </h4>\r\n      )\r\n    case 6:\r\n      return (\r\n        <h6\r\n        className={`heading ${type ? `heading--${type}` : ''}`}\r\n        >\r\n          {children}\r\n        </h6>\r\n      )\r\n    default:\r\n      throw new Error('Expecting values from 1 to 6')\r\n  }\r\n}\r\n","import React ,{ Component, ReactElement } from 'react';\r\n\r\nimport './Button.css';\r\n\r\n// TODO Revise to be a Functional component\r\n\r\nexport const Button = (props: Local.ButtonProps): ReactElement<any, any> => {\r\n  const { type, innerText, isHTMLInputSubmit, handleClickFn, target } = props;\r\n\r\n  if (isHTMLInputSubmit === true ) {\r\n    return(\r\n      <input\r\n        className={`btn btn--submit`}\r\n        type='submit'\r\n        value='Submit'\r\n        onClick={handleClickFn}\r\n      />\r\n    )\r\n  }\r\n  return (\r\n    <button\r\n      className={`btn ${type ? `btn--${type}` : 'btn--std'}`}\r\n      onClick={handleClickFn}\r\n      data-target={target}\r\n    >\r\n      {innerText}\r\n    </button>\r\n  )\r\n}\r\n","import React ,{ Component, ReactElement, ReactChild } from 'react';\r\n\r\nimport './Card.css';\r\n\r\nexport class Card extends Component<Local.CardProps> {\r\n  render() {\r\n    const { children, type, id } = this.props;\r\n    if (!children) throw new Error('Erorr expecting children elements');\r\n      const { header, content, media, action } = children;\r\n      return(\r\n        <section\r\n          className={`card ${type ? `card--${type}` : ''}`}\r\n          id={id}\r\n        >\r\n          {header ? <header className='card__header'>{header}</header> : null}\r\n          {media ? <div className='card__media'>{media}</div> : null}\r\n          {content ? <div className='card__content'>{content}</div> : null}\r\n          {action ? <div className='card__actions'>{action}</div> : null}\r\n        </section>\r\n      )\r\n  }\r\n}\r\n","import React, { Component, ReactElement } from 'react';\r\n\r\nimport { Heading } from '../base/Heading/Heading';\r\nimport { Button } from '../base/Button/Button';\r\n\r\nimport { Card } from '../presentational/Card/Card';\r\n\r\nimport './Comp-modifiers.css';\r\n\r\nexport const AddCard = (props: Local.AddCardProps): ReactElement<any, any> => {\r\n    const { handleAddFn } = props;\r\n    const childrenObj = {\r\n      header: (<Heading type='ind-add' headingLvl={2}>Add Cards In!</Heading>),\r\n      content: (null),\r\n      action: (\r\n        <Button\r\n          type='add-cards'\r\n          innerText='&#43;'\r\n          target='ADD'\r\n          handleClickFn={handleAddFn}\r\n        />\r\n        )\r\n    }\r\n    return (\r\n      <Card\r\n        type='add-cards'\r\n        id='add-cards'\r\n      >\r\n        {childrenObj}\r\n      </Card>\r\n    )\r\n}\r\n","import React ,{ Component, ReactNode, ReactElement } from 'react';\r\nimport { isPrimative, isTypedObj } from '../../../helper/typeCheck';\r\n\r\nimport { AddCard } from '../../app-specific/AddCard';\r\n\r\nimport './Dash.css';\r\n\r\nimport { Card } from '../Card/Card';\r\n\r\n/* NOTE AddMore Prop is for DIRECTLY adding in a <Card/> that will tell the main app to show a Modal interface for adding additional Cards in */\r\n\r\n/* TODO Add something to handle the case of maximum number of cards rendered(probably in the form of a modal) */\r\n\r\nconst EmptyInd = (\r\n  <Card\r\n    type='ind-add'\r\n    id='ind-add'\r\n  >\r\n    {{\r\n      header: null,\r\n      content: null\r\n    }}\r\n  </Card>\r\n)\r\n\r\nexport class Dash extends Component<Local.DashProps> {\r\n  render = (): ReactElement<any, any> => {\r\n    const { type, children, AddCard, handleCardCloseFn } = this.props;\r\n    if (isAddCard(AddCard)) {\r\n      return (\r\n        <section\r\n          className={`dash ${type ? `dash--${type}` : ''}`}\r\n          onClick={handleCardCloseFn}\r\n        >\r\n          {children != null ? children : EmptyInd}\r\n          {AddCard}\r\n        </section>\r\n      )\r\n    } else if (AddCard === null) {\r\n      return (\r\n        <section\r\n          className={`dash ${type ? `dash--${type}` : ''}`}\r\n          onClick={handleCardCloseFn}\r\n        >\r\n          {children != null ? children : EmptyInd}\r\n        </section>\r\n      )\r\n    } else {\r\n      throw new Error('Error expecting AddCard to be a Card')\r\n    }\r\n  }\r\n}\r\n\r\nconst isAddCard = (ele: any): boolean => {\r\n  const AddCardName: string = AddCard.name;\r\n  return isTypedObj(ele, AddCardName);\r\n}","const isPrimative = (value: any): boolean =>\r\n  typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean'\r\n\r\nconst isFunc = (obj: any): obj is Function =>\r\n  typeof obj === 'function' && obj != undefined;\r\n\r\nconst isTypedObj = <T extends object>(obj: any, keyFromType: string): obj is T =>\r\n  isPrimative(obj) === false && obj != null && keyFromType in obj\r\n\r\nexport {\r\n  isPrimative,\r\n  isFunc,\r\n  isTypedObj,\r\n}","import React ,{ Component, ReactElement } from 'react';\r\n\r\nimport { Button } from '../../../base/Button/Button';\r\nimport { Heading } from '../../../base/Heading/Heading';\r\nimport '../Modal.css';\r\n\r\nexport class Modal extends Component<Local.ModalProps> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    if (!this.props.handleCloseFn) {console.warn('warning expecting a parent to handle <Modal/> render state')}\r\n  }\r\n\r\n  render = (): ReactElement<any, any> => {\r\n    const { type, children, headerText, contentModifier, handleCloseFn, id } = this.props;\r\n    return (\r\n        <section\r\n          className={`modal ${type ? `modal--${type}` : ''}`}\r\n          id={id}\r\n        >\r\n          <header\r\n            className='modal__header'\r\n          >\r\n            <Heading\r\n              type='modal'\r\n              headingLvl={2}\r\n            >\r\n              {headerText}\r\n            </Heading>\r\n            <Button\r\n              type='close'\r\n              innerText='&times;'\r\n              handleClickFn={handleCloseFn}\r\n            />\r\n          </header>\r\n          <section\r\n            className={`modal__content ${contentModifier ? `modal__content--${contentModifier}` : ''}`}\r\n          >\r\n            {children}\r\n          </section>\r\n        </section>\r\n    )\r\n  }\r\n}\r\n","// NOTE Modal for adding more cards in\r\n\r\nimport React, { ReactElement } from 'react';\r\n\r\n\r\nimport { Button } from '../../base/Button/Button';\r\n\r\nimport { Modal } from '../../presentational/ModalController/Modal/Modal';\r\n\r\nimport '../Comp-modifiers.css';\r\n\r\nexport const AddModal = (props: Local.AddModalProps): ReactElement<any, any> => {\r\n  const { id, handleCloseFn, handleCardFn, renderCards } = props\r\n\r\n  return(\r\n    <Modal\r\n      key={0}\r\n      id={id ? id : 'add-more'}\r\n      type='add-more'\r\n      headerText='Add Cards in'\r\n      handleCloseFn={handleCloseFn}\r\n    >\r\n      <Button\r\n        key={0}\r\n        innerText={renderCards.basic1 === false ? 'Add card 1' : 'Remove card 1'}\r\n        target='basic1'\r\n        handleClickFn={handleCardFn}\r\n        />\r\n      <Button\r\n        key={1}\r\n        innerText={renderCards.basic2 === false ? 'Add card 2' : 'Remove card 2'}\r\n        target='basic2'\r\n        handleClickFn={handleCardFn}\r\n        />\r\n      <Button\r\n        key={2}\r\n        innerText={renderCards.cat === false ? 'Add cat card' : 'Remove cat card'}\r\n        target='cat'\r\n        handleClickFn={handleCardFn}\r\n        />\r\n      <Button\r\n        key={3}\r\n        innerText={renderCards.lorem === false ? 'Add lorem card' : 'Remove lorem card'}\r\n        target='lorem'\r\n        handleClickFn={handleCardFn}\r\n      />\r\n      <Button\r\n        key={4}\r\n        innerText={renderCards.todo === false ? 'Add Todo card' : 'Remove Todo card'}\r\n        target='todo'\r\n        handleClickFn={handleCardFn}\r\n      />\r\n    </Modal>\r\n  )\r\n}\r\n","import React ,{ ReactElement } from 'react';\r\n\r\nimport './Paragraph.css'\r\n\r\nexport const Paragraph = (props: Local.ParagraphProps): ReactElement<any, any> => {\r\n  const { children, type } = props;\r\n  if (!children) throw new Error('Erorr expecting children elements');\r\n  return (\r\n    <p\r\n      className={`prgh ${type ? `prgh--${type}` : ''}`}\r\n    >\r\n      {children}\r\n    </p>\r\n  )\r\n}\r\n","// NOTE Modal for adding more cards in\r\n\r\nimport React, { ReactElement } from 'react';\r\n\r\n\r\nimport { Paragraph } from '../../base/Paragraph/Paragraph';\r\n\r\nimport { Modal } from '../../presentational/ModalController/Modal/Modal';\r\n\r\nimport '../Comp-modifiers.css';\r\n\r\nexport const InfoModal = (props: Local.InfoModalProps): ReactElement<any, any> => {\r\n  const { id, handleCloseFn } = props\r\n\r\n  return(\r\n    <Modal\r\n      key={0}\r\n      id={id ? id : 'info'}\r\n      type='info'\r\n      headerText='About this app'\r\n      handleCloseFn={handleCloseFn}\r\n    >\r\n      <Paragraph>\r\n        This app is a dashboard meant to present some either relevant or whismical content in the form of cards. In addition,the app allows users to add or remove cards as they please.\r\n      </Paragraph>\r\n      <Paragraph>\r\n        Built using <a href='https://facebook.github.io/create-react-app/'>Create React App</a>, <a href='https://www.typescriptlang.org/'>TypeScript</a>, and <a href='https://storybook.js.org/'>Storybook</a>.\r\n      </Paragraph>\r\n    </Modal>\r\n  )\r\n}\r\n","import React ,{ Component, ReactNode, ReactElement, ReactNodeArray } from 'react';\r\n\r\nimport { AddModal } from '../../app-specific/AddModal/AddModal';\r\nimport { InfoModal } from '../../app-specific/InfoModal/InfoModal';\r\nimport { Modal } from './Modal/Modal';\r\n\r\nimport './Modal.css';\r\n\r\nconst initialState: Local.BasicObj = {\r\n  toDisplay: ''\r\n}\r\n\r\n// NOTE Should be passing state in as a prop for Modal Controller to read\r\n// TODO For any state passing as props, UPDATE TO USE THE CONTEXT API AT SOME POINT\r\n// TODO Look into using React refs for passing props also\r\nexport class ModalController extends Component<Local.ModalControllerProps, any>{\r\n  constructor(props: Local.ModalControllerProps) {\r\n    super(props);\r\n    if (!this.props.toDisplay) {\r\n      this.state = initialState;\r\n    }\r\n  }\r\n\r\n  renderModal = (): ReactElement<any, any> | null => {\r\n    const { toDisplay, renderCards, handleCloseFn, handleCardFn } = this.props;\r\n    switch(toDisplay) {\r\n      case 'INFO':\r\n        return (\r\n          <InfoModal\r\n            handleCloseFn={handleCloseFn}\r\n          />\r\n\r\n        );\r\n\r\n      case 'ADD':\r\n          return (\r\n            <AddModal\r\n              renderCards={renderCards}\r\n              handleCardFn={handleCardFn}\r\n              handleCloseFn={handleCloseFn}\r\n            />\r\n          );\r\n      case 'BASIC':\r\n        return(\r\n          <Modal\r\n            id='basic'\r\n            type='basic'\r\n            headerText='This is a Basic modal that is expected to work'\r\n            handleCloseFn={handleCloseFn}\r\n          >\r\n            <p>This file holds the text for the various sections of the page. Ideally this would be handled via asynchronous import from an external file, but that's slightly beyond what I'm trying to accomplish for v0.5.0. It probably will be added in at some point though as copy and pasting in the text into the relevant sections is not at all efficient.</p>\r\n          </Modal>\r\n        )\r\n      default:\r\n        return null;\r\n    }\r\n  }\r\n\r\n  render = (): ReactElement<any,any> => {\r\n    const { handleCloseFn, id } = this.props;\r\n    const toRender = this.renderModal();\r\n    return (\r\n      <>\r\n        { toRender == null ? null :\r\n          (<section\r\n            id={id ? id : 'modal-controller'}\r\n            className='modal-wrapper'\r\n            onClick={handleCloseFn}\r\n          >\r\n            {toRender}\r\n          </section>)\r\n        }\r\n      </>\r\n  )\r\n  }\r\n}\r\n\r\n","import React, { Component, ReactElement } from 'react';\r\n\r\nimport { Button } from '../base/Button/Button';\r\n\r\nimport './Comp-modifiers.css';\r\n\r\nexport const Info = (props: Local.InfoButtonProps): ReactElement<any, any> => {\r\n    const { handleDisplayFn } = props;\r\n    return (\r\n      <Button\r\n        type='page-info'\r\n        innerText='?'\r\n        target='INFO'\r\n        handleClickFn={handleDisplayFn}\r\n      />\r\n    )\r\n}\r\n","import React, { Component , ReactElement } from 'react';\r\n\r\nimport './Image.css';\r\n\r\nconst Image = (props: Local.ImageProps) => {\r\n  const { src, alt, type } = props\r\n  return (\r\n    <img\r\n      className={`image ${type ? `image--${type}` : ''}`}\r\n      src={src}\r\n      alt={alt}\r\n    >\r\n    </img>\r\n  )\r\n}\r\n\r\nexport {\r\n  Image\r\n}","/* NOTE State for various App Fragments\r\nAt some point should combine them into one object,\r\nor use Object.assign() to clone them into one object */\r\n\r\nconst RenderModalState: Local.BasicObj = {\r\n  toDisplay: ''\r\n}\r\n\r\nconst AddCardState: Local.BasicObj = {\r\n  basic1: false,\r\n  basic2: false\r\n}\r\n\r\nconst LoremGETState: Local.BasicObj = {\r\n  loremStr: ''\r\n}\r\n\r\nconst CatGETState: Local.BasicObj = {\r\n    catFact: '',\r\n    catImg: ''\r\n}\r\n\r\nconst AppState: Local.BasicObj = {\r\n  listEle: [],\r\n  toDisplay: null,\r\n  renderCards: {\r\n    basic1: false,\r\n    basic2: false,\r\n    lorem: false,\r\n    cat: false,\r\n    todo: false,\r\n  }\r\n}\r\n\r\nexport {\r\n  AppState,\r\n  AddCardState,\r\n  RenderModalState,\r\n  LoremGETState,\r\n  CatGETState,\r\n}","import React, { Component, ReactElement } from 'react';\r\n\r\nimport { Heading } from '../base/Heading/Heading';\r\nimport { Image } from '../base/Image/Image';\r\nimport { Paragraph } from '../base/Paragraph/Paragraph';\r\nimport { Button } from '../base/Button/Button';\r\n\r\nimport { Card } from '../presentational/Card/Card';\r\n\r\nimport { CatGETState } from '../../State';\r\n\r\nimport './Comp-modifiers.css';\r\n\r\n// NOTE API site https://alexwohlbruck.github.io/cat-facts/docs/endpoints/facts.html\r\n\r\nconst catHeader = new Headers()\r\ncatHeader.append('Access-Control-Allow-Origin', '*');\r\n// catHeader.append('Access-Control-Allow-Credentials', 'true');\r\n\r\n\r\nconst fetchInit: Local.FetchParam = {\r\n  method: 'GET',\r\n  mode: 'cors',\r\n}\r\n\r\nconst initialState: Local.BasicObj = {...CatGETState }\r\n\r\ntype State = Readonly<typeof initialState>\r\n\r\n\r\n// REVIEW THE BELOW CORS ANYWHERE ADDITION IS ONLY FOR DEVELOPMENT\r\n// REMOVE THIS WHEN YOU DEPLOY OR IF YOU ADD A PROXY\r\nconst externalCorsProxy = process.env.NODE_ENV === 'development' ? 'https://cors-anywhere.herokuapp.com/' : '';\r\nconst catEndpoint1 = 'https://cat-fact.herokuapp.com/facts/random';\r\nconst catEndpoint2 = 'https://aws.random.cat/meow';\r\n\r\nexport class CatCard extends Component<any, State> {\r\n  readonly state: State = initialState;\r\n\r\n  getCatFactFetch = async (): Promise<void> => {\r\n    const responseStr: string | void = await fetch(externalCorsProxy + catEndpoint1, fetchInit)\r\n      .then((blob: Response): Promise<Response> => {\r\n        return blob.clone().json()\r\n      })\r\n      .then((val: any): string => {\r\n        const response = val.text;\r\n        return response;\r\n      })\r\n    .catch((error: any) => console.error(error));\r\n\r\n    this.setState({catFact: responseStr});\r\n\r\n    const responseImg: string | void = await fetch(catEndpoint2, fetchInit)\r\n      .then((blob: Response): Promise<Response> => {\r\n        return blob.clone().json();\r\n      })\r\n      .then((val: any): string => {\r\n        const response = val.file;\r\n        return response;\r\n      })\r\n    .catch((error: any): void => console.error(error));\r\n\r\n    this.setState({catImg: responseImg});\r\n  }\r\n\r\n  render = (): ReactElement<any, any> => {\r\n    const { catFact, catImg } = this.state;\r\n    return (\r\n      <Card\r\n        type='cat'\r\n        id='cat'\r\n      >\r\n        {{\r\n          header: ([\r\n            <Heading\r\n              type=''\r\n              headingLvl={2}\r\n            >\r\n              Cat Pics and Facts\r\n            </Heading>,\r\n            <Button\r\n              type='close'\r\n              target='cat'\r\n              innerText='&times;'\r\n            />\r\n          ]),\r\n          content: (\r\n            <>\r\n            <Paragraph\r\n              type='lorem'\r\n            >\r\n              {(catFact !== '') && (catImg !== '') ? catFact : 'Click the button to see a cat fact.'}\r\n            </Paragraph>\r\n            {catImg ? <Image src={catImg} alt='cat image'/> : null}\r\n            </>\r\n          ),\r\n          action: (\r\n            <Button\r\n              innerText='Get Cat Fact'\r\n              handleClickFn={this.getCatFactFetch}\r\n            />\r\n          )\r\n        }}\r\n      </Card>\r\n    )\r\n  }\r\n}\r\n","import React ,{ ReactElement } from 'react';\r\n\r\nimport '../List.css'\r\n\r\nexport const ListItem = (props: Local.ListItemProps): ReactElement<any, any> => {\r\n  const { children, type } = props;\r\n  if (!children) throw new Error('Erorr expecting children elements');\r\n  return (\r\n    <li\r\n      className={`list-item ${type ? `list-item--${type}` : ''}`}\r\n    >\r\n      {children}\r\n    </li>\r\n  )\r\n}\r\n","import React, { Component, ReactElement } from 'react';\r\n\r\nimport { ListItem } from './ListItem/ListItem';\r\n\r\nimport './List.css';\r\n\r\nexport class List extends Component<Local.ListProps, any> {\r\n\r\n  renderChildren = (): ReactElement<any, any> | ReactElement<any, any>[] => {\r\n    const { children } = this.props;\r\n    if (children instanceof Array) {\r\n      const toRender = children.map((child: any, index: number): ReactElement<any, any> => {\r\n        return (\r\n          <ListItem\r\n            key={index}\r\n          >\r\n            {child}\r\n          </ListItem>\r\n        )\r\n      });\r\n      return toRender;\r\n    }\r\n    return (\r\n      <ListItem\r\n      >\r\n        {children}\r\n      </ListItem>\r\n    )\r\n  }\r\n\r\n  render = (): ReactElement<any, any> | null => {\r\n    const { listType, type } = this.props;\r\n    const toRender = this.renderChildren();\r\n    switch(listType) {\r\n      case 'ul':\r\n        return (\r\n          <ul\r\n            className={`ul ${type ? `ul--${type}` : ''}`}\r\n          >\r\n            {toRender}\r\n          </ul>\r\n        )\r\n      case 'ol':\r\n        return (\r\n          <ol\r\n            className={`ol ${type ? 'ol--type' : ''}`}\r\n          >\r\n            {toRender}\r\n          </ol>\r\n        )\r\n      default:\r\n        return null;\r\n    }\r\n  }\r\n}","import React ,{ Component, ReactElement } from 'react';\r\nimport { capitalizeString } from '../../../../helper/helperUtils';\r\n\r\n\r\nexport const Field = (props: Local.FieldProps): ReactElement<any, any> => {\r\n    const {\r\n      type,\r\n      name,\r\n      noLabel,\r\n      handleChangeFn,\r\n      handleClickFn,\r\n      value,\r\n      required,\r\n      inputName,\r\n      labelName\r\n    } = props;\r\n\r\n    if (handleChangeFn == null && handleClickFn == null) throw new Error(`\r\n      Error expecting a Function for handleChangeFn AND handleClickFn\r\n    `)\r\n\r\n    if (noLabel !== true) {\r\n      const checkType = (type === 'radio') ? value : name;\r\n      const labelText = capitalizeString(checkType!);\r\n      switch (type) {\r\n        case 'radio':\r\n          return (\r\n            <>\r\n              <input\r\n                key={1}\r\n                type={`${type}`}\r\n                name={`${name}`}\r\n                className={ inputName ? inputName : '' }\r\n                required={required ? required : false}\r\n                value={value}\r\n                onClick={handleClickFn ? handleClickFn : undefined}\r\n                onChange={handleChangeFn ? handleChangeFn : undefined}\r\n                />\r\n              <label\r\n                key={0}\r\n                className={ labelName ? labelName : '' }\r\n                htmlFor={`${name}`}\r\n              >\r\n                {labelText}\r\n              </label>\r\n            </>\r\n          )\r\n\r\n        default:\r\n        return (\r\n          <>\r\n            <label\r\n              key={0}\r\n              className={ labelName ? labelName : '' }\r\n              htmlFor={`${name}`}\r\n            >\r\n              {labelText}\r\n            </label>\r\n            <input\r\n              key={1}\r\n              type={`${type}`}\r\n              name={`${name}`}\r\n              className={ inputName ? inputName : '' }\r\n              required={required ? required : false}\r\n              value={value}\r\n              onClick={handleClickFn ? handleClickFn : undefined}\r\n              onChange={handleChangeFn ? handleChangeFn : undefined}\r\n              />\r\n          </>\r\n        )\r\n      }\r\n    }\r\n    return(\r\n      <input\r\n        required={required ? required : false}\r\n        type={`${type}`}\r\n        name={`${name}`}\r\n        value={value}\r\n        onClick={handleClickFn ? handleClickFn : undefined}\r\n          onChange={handleChangeFn ? handleChangeFn : undefined}\r\n        />\r\n    )\r\n}\r\n","const capitalizeString = (string: string): string => {\r\n  if (string == null) throw new Error('Expecting a string input')\r\n  const regex = /\\b[a-z]/i;\r\n  const match = string.match(regex);\r\n  if (match == null) throw new Error('Error expecting a non-zero length string')\r\n  const capitalizedLetter = match[0].toUpperCase();\r\n  const capitalizedString = string.replace(regex, capitalizedLetter);\r\n  return capitalizedString;\r\n}\r\n\r\nexport {\r\n  capitalizeString,\r\n}","import React ,{ Component, ReactElement } from 'react';\r\nimport { isTypedObj, isFunc, isPrimative } from '../../../helper/typeCheck';\r\nimport { Field } from './Field/Field';\r\nimport { Button } from '../../base/Button/Button';\r\n\r\n//TODO Make the keys for state settable by the user\r\n\r\nconst initialState: Local.BasicObj = {\r\n  task: '',\r\n  priority: ''\r\n}\r\n\r\ntype State = Readonly<typeof initialState>;\r\n\r\nexport class Form extends Component<Local.FormProps, State> {\r\n  // NOTE this is for when Form is eventually extended to accept a prop for setting up custom/ user-submitted Form input names\r\n  constructor(props: Local.FormProps) {\r\n    super(props);\r\n  }\r\n\r\n  readonly state: State = initialState;\r\n\r\n  handleFormChangeDefault: Local.VoidFn = (event: React.ChangeEvent<HTMLInputElement>): void => {\r\n    const { name, value }: { name: string, value: string } = event.target;\r\n    if (Object.keys(this.state).includes(name)){\r\n      this.setState({\r\n          [name] : value\r\n      } as Pick<State, keyof State>);\r\n      return;\r\n    }\r\n    else {\r\n      throw new Error('Error: Keys in State don\\'t match')\r\n    }\r\n  }\r\n\r\n  submitForm: Local.VoidFn = (event: React.MouseEvent<HTMLInputElement>): void => {\r\n    event.preventDefault();\r\n    const { handleSubmitFn } = this.props;\r\n    // check to make sure Form has all the data required for submission\r\n    if (Object.values(this.state).some((val: any) => val === '')) return;\r\n    handleSubmitFn(this.state);\r\n    this.setState((prevState: State)=> {\r\n      return {\r\n        ...initialState,\r\n        priority: prevState.priority\r\n      }\r\n    });\r\n  }\r\n\r\n  render = (): ReactElement<any, any> => {\r\n    const { type, id, handleChangeFn } = this.props\r\n    return (\r\n      <form\r\n        id={`${id ? id: '' }`}\r\n        className={`form ${ type ? `form--${ type }` : '' }`}\r\n      >\r\n        <fieldset>\r\n          <legend>Task Priority</legend>\r\n          <Field\r\n            type='radio'\r\n            name='priority'\r\n            labelName='todo--radio'\r\n            required={ true }\r\n            value='High'\r\n            handleClickFn={ this.handleFormChangeDefault }\r\n            />\r\n          <Field\r\n            type='radio'\r\n            name='priority'\r\n            labelName='todo--radio'\r\n            required={ true }\r\n            value='Medium'\r\n            handleClickFn={ this.handleFormChangeDefault }\r\n            />\r\n          <Field\r\n            type='radio'\r\n            name='priority'\r\n            labelName='todo--radio'\r\n            required={ true }\r\n            value='Low'\r\n            handleClickFn={ this.handleFormChangeDefault }\r\n            />\r\n        </fieldset>\r\n        <Field\r\n          type='text'\r\n          name='task'\r\n          required={ true }\r\n          value={ this.state.task }\r\n          handleChangeFn={ this.handleFormChangeDefault }\r\n          />\r\n        <Button\r\n          type='submit'\r\n          isHTMLInputSubmit={ true }\r\n          innerText={ null }\r\n          handleClickFn={ this.submitForm }>\r\n        </Button>\r\n      </form>\r\n    )\r\n  }\r\n}\r\n","import React, { Component, ReactElement } from 'react';\r\n\r\nimport { Field } from '../../stateful/Forms/Field/Field';\r\nimport { Heading } from '../../base/Heading/Heading';\r\nimport { Button } from '../../base/Button/Button';\r\n\r\nimport { Card } from '../../presentational/Card/Card';\r\nimport { List } from '../../presentational/List/List';\r\n\r\nimport { Form } from '../../stateful/Forms/Form';\r\n\r\nimport '../Comp-modifiers.css';\r\n\r\nconst sayHi = () => console.warn('Expecting a function');\r\n\r\nclass TodoCard extends Component<Local.TodoCardProps, any> {\r\n\r\n  render = (): ReactElement<any, any> => {\r\n    const { children, handleSubmitFn } = this.props;\r\n    const length = Array.isArray(children) ? children.length : null;\r\n    const toRender = children ? children : 'Add some tasks!';\r\n    return (\r\n      <Card\r\n        id='todo'\r\n        type='todo'\r\n      >\r\n        {{\r\n          header: ([\r\n            <Heading\r\n              key={0}\r\n              type='md'\r\n              headingLvl={3}\r\n              >\r\n              To Do Card\r\n            </Heading>,\r\n            <Button\r\n              key={1}\r\n              type='close'\r\n              target='todo'\r\n              innerText='&times;'\r\n            />\r\n          ]),\r\n          content: (\r\n            <>\r\n            {/* <Heading\r\n              key={0}\r\n              type='sm'\r\n              headingLvl={4}\r\n              >\r\n              Form\r\n            </Heading> */}\r\n            <Form\r\n              id='todo-form'\r\n              handleSubmitFn={handleSubmitFn ? handleSubmitFn : sayHi}\r\n            >\r\n            </Form>\r\n\r\n            { length !== 0 ? (\r\n              <List\r\n                type='todo'\r\n                listType='ul'\r\n              >\r\n                {toRender}\r\n              </List>\r\n            ) : null }\r\n            </>\r\n          )\r\n        }}\r\n      </Card>\r\n    )\r\n  }\r\n}\r\n\r\nexport { TodoCard }","import React, { ReactElement } from 'react';\r\n\r\nimport { Button } from '../../base/Button/Button';\r\nimport { Paragraph } from '../../base/Paragraph/Paragraph';\r\n\r\n\r\nexport const TodoEntry = (props: Local.TodoEntryProps): ReactElement<Local.TodoEntryProps> => {\r\n  const { index, task, priority, handleDeleteFn } = props;\r\n  const flex = {\r\n    display: 'flex',\r\n    flexFlow: 'row nowrap',\r\n    justifyContent: 'flex-start',\r\n    alignItems: 'baseline',\r\n    marginLeft: '0.5rem',\r\n    width: '5rem'\r\n  }\r\n  const priorityDiv = (\r\n    <div\r\n      key={0}\r\n      style={flex}\r\n    >\r\n      <div className={`priority priority--${priority}`}></div>\r\n      <span>{priority}</span>\r\n    </div>\r\n  );\r\n  const deleteBtn = (\r\n    <Button\r\n      key={1}\r\n      type='danger'\r\n      target={index}\r\n      innerText='Delete'\r\n      handleClickFn={handleDeleteFn}\r\n    />\r\n  )\r\n  const prgh = (\r\n    <Paragraph\r\n      key={2}\r\n      type='todo'\r\n    >{ task }\r\n    </Paragraph>\r\n  );\r\n  return (\r\n    <>\r\n      {priorityDiv}\r\n      {prgh}\r\n      {deleteBtn}\r\n    </>\r\n  )\r\n}","import React, { Component, ReactElement } from 'react';\r\n\r\n\r\nimport { Heading } from '../base/Heading/Heading';\r\nimport { Paragraph } from '../base/Paragraph/Paragraph';\r\nimport { Button } from '../base/Button/Button';\r\n\r\nimport { Card } from '../presentational/Card/Card';\r\n\r\nimport { LoremGETState } from '../../State';\r\n\r\nimport './Comp-modifiers.css';\r\n\r\n/* NOTE This is an example of how an <App/> might integrate the Lorem card in and does not try to\r\nfully integrate everything in.\r\nAlso note that the methods should be slightly renamed when copying them in\r\n*/\r\n\r\n// TODO Remove one of the Lorem methods, don't need both Fetch and XHR\r\n\r\n// REVIEW If a Node server is integrated in for CORS AND it can do 'GET' on Loripsum.net, switch out the thing\r\n\r\nconst fetchInit: Local.FetchParam = {\r\n  method: 'GET',\r\n  mode: 'cors'\r\n}\r\n\r\nconst initialState: Local.BasicObj = { ...LoremGETState }\r\n\r\ntype State = Readonly<typeof initialState>\r\n\r\nconst externalCorsProxy = process.env.NODE_ENV === 'development' ? 'https://cors-anywhere.herokuapp.com/' : '';\r\nconst loremEndpoint = 'https://loripsum.net/api/1/short/plaintext';\r\n\r\nexport class LoremCard extends Component<any, State> {\r\n  readonly state: State = initialState;\r\n\r\n  getLoremFetch = async (): Promise<void> => {\r\n    const responseStr = await fetch(externalCorsProxy + loremEndpoint, fetchInit)\r\n      .then((blob: any): Promise<Response> => blob.clone())\r\n      .then((val: Response): Promise<string> => {\r\n        const response = val.text();\r\n        return response;\r\n      })\r\n    .catch((error: any) => console.error(error));\r\n    this.setState({loremStr: responseStr});\r\n  }\r\n\r\n  render = (): ReactElement<any, any> => {\r\n    const { loremStr } = this.state;\r\n    return (\r\n      <Card\r\n        type='lorem'\r\n        id='lorem'\r\n      >\r\n        {{\r\n          header: ([\r\n            <Heading\r\n              type=''\r\n              headingLvl={2}\r\n            >\r\n              Lorem Ipsum Generator\r\n            </Heading>,\r\n            <Button\r\n              type='close'\r\n              target='lorem'\r\n              innerText='&times;'\r\n            />\r\n          ]),\r\n          content: (\r\n            <Paragraph\r\n              type='lorem'\r\n            >\r\n              {loremStr ? loremStr : 'Generate Lorem text to see it here.'}\r\n            </Paragraph>\r\n          ),\r\n          action: (\r\n            <Button\r\n              innerText='Generate Lorem'\r\n              handleClickFn={this.getLoremFetch}\r\n            />\r\n          )\r\n        }}\r\n      </Card>\r\n    )\r\n  }\r\n}\r\n\r\n\r\n/* getLoremXhr = (): void => {\r\n  const xhr = new XMLHttpRequest();\r\n  xhr.open('GET', loremEndpoint, true);\r\n  xhr.onload = () => {\r\n    if (xhr.status === 200) {\r\n      const length = xhr.responseText.length;\r\n      const xhrStr = xhr.responseText.toString().slice(2, length - 2);\r\n      this.setState({loremStr: xhrStr});\r\n    }\r\n  }\r\n  xhr.send();\r\n} */","import React from 'react';\r\n\r\nimport { Heading } from './base/Heading/Heading';\r\nimport { Paragraph } from './base/Paragraph/Paragraph';\r\nimport { Button } from './base/Button/Button';\r\nimport { Card } from './presentational/Card/Card';\r\nimport { Form } from './stateful/Forms/Form';\r\nimport { Modal } from './presentational/ModalController/Modal/Modal';\r\nimport { Dash } from './presentational/Dash/Dash';\r\n\r\nconst sayHi = (event: React.MouseEvent<HTMLInputElement>) => {\r\n  console.log('hi');\r\n};\r\n\r\nconst BasicCard = (\r\n  <Card\r\n    key={undefined}\r\n    id='basicCard1'\r\n    type='basic basic1'\r\n  >\r\n    {{\r\n      header: ([\r\n        <Heading headingLvl={3}>\r\n          I'm a card with some content\r\n        </Heading>,\r\n        <Button\r\n          type='close'\r\n          target='basic1'\r\n          innerText='&times;'\r\n        />\r\n      ]),\r\n      content: (\r\n        <Paragraph>\r\n        Sed varius euismod mi vel mollis. Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Cras quam sapien, semper id leo sed, gravida ultrices eros. Cras ipsum magna, mollis ut dui ac, blandit rutrum elit.\r\n      </Paragraph>\r\n      )\r\n    }}\r\n  </Card>\r\n)\r\nconst BasicCard2 = (\r\n  <Card\r\n    key={undefined}\r\n    id='basicCard2'\r\n    type='basic basic2'\r\n  >\r\n    {{\r\n      header: ([\r\n        <Heading headingLvl={3}>\r\n          I'm a different card with some content\r\n        </Heading>,\r\n        <Button\r\n          type='close'\r\n          innerText='&times;'\r\n          target='basic2'\r\n        />\r\n      ]),\r\n      content: (\r\n        <Paragraph>\r\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Hoc tu nunc in illo probas. Sed tamen intellego quid velit. Respondeat totidem verbis. De quibus cupio scire quid sentias. An eiusdem modi?\r\n      </Paragraph>\r\n      )\r\n    }}\r\n  </Card>\r\n)\r\n\r\nexport {\r\n  sayHi,\r\n  BasicCard,\r\n  BasicCard2,\r\n}","import React, { Component, ReactElement, MouseEvent } from 'react';\r\n\r\nimport { Button } from './components/base/Button/Button';\r\nimport { Paragraph } from './components/base/Paragraph/Paragraph';\r\n\r\nimport { Dash } from './components/presentational/Dash/Dash'\r\nimport { ModalController } from './components/presentational/ModalController/ModalController'\r\n\r\nimport { Info } from './components/app-specific/Info'\r\nimport { AddCard } from './components/app-specific/AddCard'\r\nimport { CatCard } from './components/app-specific/CatCard'\r\nimport { TodoCard } from './components/app-specific/Todo/TodoCard';\r\nimport { TodoEntry } from './components/app-specific/Todo/TodoEntry';\r\nimport { LoremCard } from './components/app-specific/LoremCard'\r\n\r\nimport { BasicCard, BasicCard2 } from './components/Placeholder'\r\n\r\nimport { AppState } from './State'\r\n\r\nimport './main.css';\r\n\r\ntype State = Readonly<typeof AppState>;\r\n\r\nexport class App extends Component<any, State> {\r\n  readonly state: State = AppState;\r\n\r\n  handleModalDisplay: Local.VoidFn = (event: React.MouseEvent<HTMLElement>): void => {\r\n    if (!(event.target instanceof HTMLElement)) throw new Error(`Expecting a HTMLElement as the target of the event, got ${event.target} instead`);\r\n    const { target } = event.target.dataset;\r\n    this.setState({\r\n      toDisplay: target\r\n    });\r\n  }\r\n\r\n  hideModal: Local.VoidFn = (event: MouseEvent<HTMLElement>): void => {\r\n    if (!(event.target instanceof HTMLElement)) throw new Error(`Expecting a HTMLElement as the target of the event, got ${event.target} instead`);\r\n\r\n    const targetModalClass = ['modal-wrapper', 'btn--close'];\r\n    const { classList } = event.target;\r\n\r\n    const classCheck = (classList.contains(targetModalClass[0]) || classList.contains(targetModalClass[1]));\r\n\r\n    if (classCheck === true) {\r\n      event.stopPropagation();\r\n      this.setState({\r\n        toDisplay: null\r\n      })\r\n      return;\r\n    }\r\n  }\r\n\r\n  handleSubmit = (childState: any): any => {\r\n    this.setState((prevState: State) => {\r\n      const { listEle } = prevState;\r\n      listEle.push(childState);\r\n      return (\r\n        {\r\n          'listEle': listEle,\r\n        }\r\n      )\r\n    });\r\n  }\r\n\r\n  handleEntryDelete = (event: MouseEvent<HTMLButtonElement>) => {\r\n    if (event.target instanceof HTMLElement) {\r\n      const { target } = event.target.dataset;\r\n      const index = parseInt(target!);\r\n      this.setState((prevState: State): State => {\r\n        const { listEle: prevList } = prevState;\r\n        prevList.splice(index, 1);\r\n        return {};\r\n      })\r\n    }\r\n  }\r\n\r\n  renderTemplate = (val: Local.BasicObj, index: number): ReactElement<any> => {\r\n    const { task, priority } = val;\r\n    return (\r\n      <TodoEntry\r\n        key={index}\r\n        index={`${index}`}\r\n        task={task}\r\n        priority={priority}\r\n        handleDeleteFn={this.handleEntryDelete}\r\n      />\r\n    )\r\n  }\r\n\r\n\r\n  toggleCardState = (event: MouseEvent<HTMLElement>): void => {\r\n    if (event.target instanceof HTMLElement) {\r\n      const { target } = event.target.dataset;\r\n      if (typeof target !== 'string') return;\r\n      if (Object.keys(this.state.renderCards).includes(target)) {\r\n        this.setState((prevState: State) => {\r\n          const { renderCards } = prevState;\r\n          return (\r\n            {\r\n              renderCards: {\r\n                ...renderCards,\r\n                [target]: !renderCards[target]\r\n              }\r\n            }\r\n          )\r\n        });\r\n      }\r\n    } else {\r\n      throw new Error(`Expecting event target to be an instance of HTMLElement,\r\n      got ${event.target} instead`)\r\n    }\r\n  }\r\n\r\n  renderCardsState = (): ReactElement<any, any>[] | null => {\r\n    const { renderCards } = this.state;\r\n    // TODO find a way to fetch the current list of children\r\n    /*\r\n      so instead of using switches and boolean, just use an array of strings?\r\n      Like so: renderCardState =  ['cat', 'lorem', 'basic1']\r\n      and then search through the array and if something there is familiar then\r\n      push that into a childArr var\r\n      so the above becomes [<CatCard/>, <LoremCard/>, BasicCard]\r\n\r\n      Then in the case of already rendered cards signified by the entry already being\r\n      in the renderCardState array, just find the index of it and then splice it out of both State and childArr\r\n     */\r\n    const childArr: Array<ReactElement<any, any>> = [];\r\n    for (const key in renderCards) {\r\n      switch (key) {\r\n        case 'cat':\r\n          if (renderCards[key] === true) {\r\n            const Card = <CatCard/>;\r\n            childArr.push(Card);\r\n            break;\r\n          }\r\n        case 'lorem':\r\n          if (renderCards[key] === true) {\r\n            const Card = <LoremCard/>;\r\n            childArr.push(Card);\r\n            break;\r\n          }\r\n        case 'todo':\r\n          if (renderCards[key] === true) {\r\n            const { listEle } = this.state\r\n            const toRender = listEle.length > 0 ? listEle.map(this.renderTemplate) : null;\r\n            const Card = <TodoCard\r\n              handleSubmitFn={this.handleSubmit}\r\n            >\r\n            { toRender }\r\n            </TodoCard>\r\n            ;\r\n            childArr.push(Card);\r\n            break;\r\n          }\r\n        case 'basic1':\r\n          if (renderCards[key] === true) {\r\n            const Card = BasicCard;\r\n            childArr.push(Card);\r\n            break;\r\n          }\r\n        case 'basic2':\r\n          if (renderCards[key] === true) {\r\n            const Card = BasicCard2;\r\n            childArr.push(Card);\r\n            break;\r\n          }\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n    const length = childArr.length;\r\n    return length === 0 ? null : childArr;\r\n  }\r\n\r\n  // TODO add Card rendering using React.cloneElement()\r\n  // TODO add keys to each card\r\n  render = (): ReactElement<any, any> => {\r\n    const { toDisplay, renderCards } = this.state\r\n    const childrenFromState = this.renderCardsState();\r\n    return (\r\n      <>\r\n        <ModalController\r\n          toDisplay={toDisplay}\r\n          renderCards={renderCards}\r\n          handleCloseFn={this.hideModal}\r\n          handleCardFn={this.toggleCardState}\r\n        />\r\n        <main>\r\n          <Dash\r\n            AddCard={\r\n              <AddCard\r\n                handleAddFn={this.handleModalDisplay}\r\n              />\r\n            }\r\n            handleCardCloseFn={this.toggleCardState}\r\n          >\r\n            {childrenFromState}\r\n          </Dash>\r\n        </main>\r\n        <Info\r\n          handleDisplayFn={this.handleModalDisplay}\r\n        />\r\n      </>\r\n    )\r\n  }\r\n}\r\n","import * as React from 'react';\r\nimport * as ReactDOM from 'react-dom';\r\n// import './stylesheets/index.css';\r\nimport { App } from './react/App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}